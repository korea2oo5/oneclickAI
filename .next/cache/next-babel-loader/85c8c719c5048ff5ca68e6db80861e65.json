{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\react\\\\OneClickAI\\\\front\\\\pages\\\\train.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useCallback } from \"react\";\nimport { Button, Col, Row, Upload, message } from \"antd\";\nimport TrainImage from \"../components/train/image\";\nimport TrainPose from \"../components/train/pose\";\nimport TrainSound from \"../components/train/sound\";\n\nvar Train = function Train() {\n  _s();\n\n  // 실제 DOM에 접근하기 위해\n  // const imageInput = useRef();\n  // const onClickImageUpload = useCallback(() => {\n  //   imageInput.current.click();\n  // }, [imageInput.current]);\n  var onChangeImage = useCallback(function (_ref) {\n    var info = _ref.info;\n\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n\n    if (info.file.status === \"done\") {\n      message.success(\"\".concat(info.file.name, \" file uploaded successfully\"));\n    } else if (info.file.status === \"error\") {\n      message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      padding: \"0 calc(100% / 9 * 2)\",\n      marginTop: 84\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    md: 24,\n    style: {\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"New Project\")), __jsx(Col, {\n    xs: 24,\n    md: 24,\n    style: {\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(Upload, {\n    name: \"file\",\n    action: \"\",\n    onChange: onChangeImage(info),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"File\"))), __jsx(TrainImage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), __jsx(TrainSound, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), __jsx(TrainPose, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Train, \"eFslBctUV0Q9mhjLg0x/GkPWKK4=\");\n\n_c = Train;\nexport default Train;\n\nvar _c;\n\n$RefreshReg$(_c, \"Train\");","map":{"version":3,"sources":["E:/react/OneClickAI/front/pages/train.js"],"names":["React","useRef","useCallback","Button","Col","Row","Upload","message","TrainImage","TrainPose","TrainSound","Train","onChangeImage","info","file","status","console","log","fileList","success","name","error","padding","marginTop","marginBottom","onClickImageUpload"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,OAAnC,QAAkD,MAAlD;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB;AACA;AAEA;AACA;AACA;AAEA,MAAMC,aAAa,GAAGV,WAAW,CAAC,gBAAc;AAAA,QAAXW,IAAW,QAAXA,IAAW;;AAC9C,QAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,WAAzB,EAAsC;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,IAAjB,EAAuBD,IAAI,CAACK,QAA5B;AACD;;AACD,QAAIL,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC/BR,MAAAA,OAAO,CAACY,OAAR,WAAmBN,IAAI,CAACC,IAAL,CAAUM,IAA7B;AACD,KAFD,MAEO,IAAIP,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACvCR,MAAAA,OAAO,CAACc,KAAR,WAAiBR,IAAI,CAACC,IAAL,CAAUM,IAA3B;AACD;AACF,GATgC,EAS9B,EAT8B,CAAjC;AAUA,SACE,4BACE;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,OAAO,EAAE,sBADJ;AAELC,MAAAA,SAAS,EAAE;AAFN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,KAAK,EAAE;AAAEA,MAAAA,YAAY,EAAE;AAAhB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,MAAM,EAAC,EAA3B;AAA8B,IAAA,QAAQ,EAAEZ,aAAa,CAACC,IAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEY,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,CAJF,EAWE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CANF,CADF,CADF;AA0BD,CA5CD;;GAAMd,K;;KAAAA,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React, { useRef, useCallback } from \"react\";\r\nimport { Button, Col, Row, Upload, message } from \"antd\";\r\nimport TrainImage from \"../components/train/image\";\r\nimport TrainPose from \"../components/train/pose\";\r\nimport TrainSound from \"../components/train/sound\";\r\n\r\nconst Train = () => {\r\n  // 실제 DOM에 접근하기 위해\r\n  // const imageInput = useRef();\r\n\r\n  // const onClickImageUpload = useCallback(() => {\r\n  //   imageInput.current.click();\r\n  // }, [imageInput.current]);\r\n\r\n  const onChangeImage = useCallback(({ info }) => {\r\n    if (info.file.status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          padding: \"0 calc(100% / 9 * 2)\",\r\n          marginTop: 84,\r\n        }}\r\n      >\r\n        <Row gutter={30}>\r\n          <Col xs={24} md={24} style={{ marginBottom: 30 }}>\r\n            <h1>New Project</h1>\r\n          </Col>\r\n          <Col xs={24} md={24} style={{ marginBottom: 30 }}>\r\n            {/* <input type=\"file\" multiple hidden ref={imageInput} /> */}\r\n            <Upload name=\"file\" action=\"\" onChange={onChangeImage(info)}>\r\n              <Button onClick={onClickImageUpload}>File</Button>\r\n            </Upload>\r\n            {/* <Button onClick={onClickImageUpload}>File</Button> */}\r\n          </Col>\r\n          <TrainImage />\r\n          <TrainSound />\r\n          <TrainPose />\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Train;\r\n"]},"metadata":{},"sourceType":"module"}